name: Test

on:
  push:
    paths:
      - ".github/workflows/*.yml"
      - "**/*.c"
      - "**/*.h"
      - "spec/**/*_spec.sh"

jobs:
  linux_test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          [ "x86_64-linux-musl" ]
    env:
      CC: ${{ matrix.target }}-gcc
      CFLAGS: -no-pie -static --static
      STRIP: ${{ matrix.target }}-strip
      TARGET_ZIP: ${{ matrix.target }}-cross.tgz
      MIRROR_URL: https://muslcc.netlify.app
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache
      with:
        path: /opt/${{ matrix.target }}-cross
        key: ${{ matrix.target }}
    - name: setup cross compiler
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        curl -O ${{ env.MIRROR_URL }}/${{ env.TARGET_ZIP }}
        tar xzf ${{ env.TARGET_ZIP }} -C /opt
    - name: add compiler to PATH
      run: echo "/opt/${{ matrix.target }}-cross/bin/" >> $GITHUB_PATH
    - name: Echo gcc version
      run: |
        ${{ matrix.target }}-gcc --verbose
    - name: build binaries for testing
      run: |
        make CC="${{ env.CC }}" \
          CFLAGS="${{ env.CFLAGS }}"
    - name: Install shellspec
      run: |
        curl -fsSL https://git.io/shellspec | sh -s -- --yes
    - name: run tests
      run: |
        make test
  mac_test:
    runs-on: ${{ matrix.target }}
    strategy:
      matrix:
        target:
          [ "macos-latest", "macos-10.15" ]
    env:
      CC: gcc
      STRIP: strip
    steps:
    - uses: actions/checkout@v2
    - name: Echo gcc version
      run: |
        gcc --verbose
    - name: build binaries for testing
      run: |
        make CC="${{ env.CC }}"
    - name: Install shellspec
      run: |
        brew install shellspec
    - name: run tests
      run: |
        make test
