name: Release

on:
  push:
    paths:
      - ".github/workflows/*.yml"
      - "**/*.c"
      - "**/*.h"

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          [
            "aarch64-linux-musl",
            "aarch64_be-linux-musl",
            "arm-linux-musleabi",
            "arm-linux-musleabihf",
            "armeb-linux-musleabi",
            "armeb-linux-musleabihf",
            "armel-linux-musleabi",
            "armel-linux-musleabihf",
            "armv5l-linux-musleabi",
            "armv5l-linux-musleabihf",
            "armv6-linux-musleabi",
            # "armv6-linux-musleabihf",
            "armv7l-linux-musleabihf",
            "armv7m-linux-musleabi",
            "armv7r-linux-musleabihf",
            "i486-linux-musl",
            "i686-linux-musl",
            # "i686-w64-mingw32",
            "m68k-linux-musl",
            "microblaze-linux-musl",
            "microblazeel-linux-musl",
            "mips-linux-musl",
            "mips-linux-musln32sf",
            "mips-linux-muslsf",
            "mips64-linux-musl",
            "mips64-linux-musln32",
            "mips64-linux-musln32sf",
            "mips64el-linux-musl",
            "mips64el-linux-musln32",
            "mips64el-linux-musln32sf",
            "mipsel-linux-musl",
            "mipsel-linux-musln32",
            "mipsel-linux-musln32sf",
            "mipsel-linux-muslsf",
            "or1k-linux-musl",
            "powerpc-linux-musl",
            "powerpc-linux-muslsf",
            "powerpc64-linux-musl",
            "powerpc64le-linux-musl",
            "powerpcle-linux-musl",
            "powerpcle-linux-muslsf",
            "riscv32-linux-musl",
            "riscv64-linux-musl",
            "s390x-linux-musl",
            "sh2-linux-musl",
            "sh2-linux-muslfdpic",
            "sh2eb-linux-musl",
            "sh2eb-linux-muslfdpic",
            "sh4-linux-musl",
            "sh4eb-linux-musl",
            "x86_64-linux-musl",
            "x86_64-linux-muslx32",
            # "x86_64-w64-mingw32"
          ]
    env:
      CC: ${{ matrix.target }}-gcc
      CFLAGS: -no-pie -static --static
      STRIP: ${{ matrix.target }}-strip
      TARGET_ZIP: ${{ matrix.target }}-cross.tgz
      MIRROR_URL: https://muslcc.netlify.app
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache
      with:
        path: /opt/${{ matrix.target }}-cross
        key: ${{ matrix.target }}
    - name: setup cross compiler
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        curl -O ${{ env.MIRROR_URL }}/${{ env.TARGET_ZIP }}
        tar xzf ${{ env.TARGET_ZIP }} -C /opt
    - name: add compiler to PATH
      run: echo "/opt/${{ matrix.target }}-cross/bin/" >> $GITHUB_PATH
    - name: Echo gcc version
      run: |
        ${{ matrix.target }}-gcc --verbose
    - name: build binaries for testing
      if: startsWith(github.ref, 'refs/tags/') != true
      run: |
        make CC="${{ env.CC }}" \
          CFLAGS="${{ env.CFLAGS }}" \
    - name: build binaries for release
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        make CC="${{ env.CC }}" \
          CFLAGS="${{ env.CFLAGS }}" \
          SUFFIX="-${{ matrix.target }}" \
          VERSION="-${{ github.ref_name }}"
    - name: strip binaries
      run: |
        STRIP=${{ env.STRIP }} ./bin/strip
    - name: Install shellspec
      if: ${{ matrix.target }} == "x86_64-linux-musl"
      run: |
        curl -fsSL https://git.io/shellspec | sh -s -- --yes
    - name: run tests
      if: ${{ matrix.target }} == "x86_64-linux-musl"
      run: |
        make test || true
    - name: Check file and ldd output
      run: |
        ./bin/file-info
    - name: Publish archives and packages
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: "build/**"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
